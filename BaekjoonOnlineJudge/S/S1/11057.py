# 11057 s1
import sys
input = sys.stdin.readline



'''
n = 1
0   1   2   3   4   5   6   7   8   9
n = 2
00  01  02  03  04
    11  12  13  14
        22  23  24
            33  34
                44
n = 3
000 001 002 003 004
    011 012 013 014
    111 022 023 024
        112 033 034
        122 113 044
        222 123 114
            133 124
            223 134
            233 144
            333 224
                234
                244
                334
                344
                444

끝자리가 0인 경우는 항상 1가지 경우만 존재
그 외 경우
n=3 일때 끝자리가 2인 경우를 찾고 싶다면 
n=2인 경우에 끝자리가 2인 경우와 n=3인 경우에 끝자리가 1인 경우의 합이 된다.
따라서 점화식은 dp[i][j] = dp[i-1][j] + d[i][j-1] 이 된다.
'''
n = int(input())
dp = [[0] * 10  for _ in range(n+1)]

for i in range(10):
    dp[1][i] = 1


for i in range(2, n+1):
    for j in range(10):
        # 끝자리 0인 경우는 한가지 경우만 존재
        if j == 0:
            dp[i][j] = 1
        else:
            dp[i][j] = dp[i-1][j] + dp[i][j-1]

print(sum(dp[n])%10007)